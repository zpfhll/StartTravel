E00001 网络问题
E00002 服务器连接不可
E00003 必须值缺失








//多条流水线式请求
 @ExperimentalCoroutinesApi
    private fun step1(user:String, password:String) = GlobalScope.produce<InternetResponse> {
        HLogger.instance().e("step1:",user)
        val apiAccess = ApiAccess()
        val response = apiAccess.signIn(user,password)
        send(response)
    }

    @ExperimentalCoroutinesApi
    private fun step2(user:String,step1:ReceiveChannel<InternetResponse>) = GlobalScope.produce {
        HLogger.instance().e("step2:",user)
        if(!step1.isClosedForReceive) {
            val step1Response = step1.receive()
            if (step1Response.internetBean == null ){
                send(step1Response)
            }else {
                val apiAccess = ApiAccess()
                val response = apiAccess.signIn(user, "password")
                send(response)
            }
        }
    }

    @ExperimentalCoroutinesApi
    private suspend fun sumLogin(user:String): InternetResponse?{
        val mStep1 = step1(user,"password")
        val mStep2 = step2(user, mStep1)
        val result = mStep2.receive()
        HLogger.instance().e("$user:", result.toString())
        return result
    }


    private fun moveToLogin(){
//        val  intent = Intent(this,LoginActivity::class.java)
//        baseStartActivity(intent,ActivityMoveEnum.START_FROM_RIGHT)
        loading.visibility = View.VISIBLE
        HLogger.instance().e("start:","moveToLogin")
        GlobalScope.launch {
            HLogger.instance().e("start:","launch")
            val time = measureTimeMillis {
                val user1 = async {  sumLogin("user1@test.com")}
                val user2 = async {  sumLogin("user2@test.com")}
                HLogger.instance().e("----->user2","${user2.await()}")
                HLogger.instance().e("----->user1","${user1.await()}")
            }
            HLogger.instance().e("time:","$time")
            val message = Message()
            message.what = 1
            closeLoadingHandler.sendMessage(message)
        }
    }